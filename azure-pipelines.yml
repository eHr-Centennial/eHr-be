trigger:
- develop
- QA
- main

variables:
  buildConfiguration: 'Release'

stages:

- stage: Build
  displayName: 'Build & Test Stage'
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-2022'

    steps:

    - task: CmdLine@2
      displayName: 'dotnet build '
      inputs:
        script: dotnet build $(Solution)

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(Solution)'
        arguments: '--configuration Release /p:Environment=Development --output $(Build.ArtifactStagingDirectory)/buildRelease'
        zipAfterPublish: true
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(Solution)'
        arguments: '--configuration Release /p:Environment=Development --output $(Build.ArtifactStagingDirectory)/buildRelease'
        zipAfterPublish: true 
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'develop'))
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(Solution)'
        arguments: '--configuration Release /p:Environment=QA --output $(Build.ArtifactStagingDirectory)/buildRelease'
        zipAfterPublish: true 
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'QA'))
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'